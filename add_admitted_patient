#check if patient is present in patient table or not first
name_regex="[^a-zA-Z ]+"
number_regex="[^0-9]+"
# location_regex="[A-Za-z0-9'\.\-\s\,]" //this is advanced regex for location
location_regex="[^a-zA-Z ]+"
date_regex="^[0-9]{4}-(01|02|03|04|05|06|07|08|09|10|11|12)-(01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)$"

echo -e "Please add the following patient details...\n"

echo "Enter patient id"
read patient_id

if [[ "$patient_id" =~ $number_regex ]]
then
echo "Please enter a valid number as id"
exit 1
fi

./patient_id_validation $patient_id
if [[ $? == 0 ]] 
then
    ./menu
    exit
fi

echo "Enter doctor id"
read d_id

if [[ "$d_id" =~ $number_regex ]]
then
echo "Please enter a valid number as id"
exit 1
fi

./doc_id_validation $d_id

if [[ $? == 0 ]] 
then
    ./menu
    exit
fi

echo "Enter admitted date(YYYY-MM-DD)"
read admitted_date

if[[ ! "$admitted_date" =~ $date_regex ]]
then
echo "Please enter a valid date in YYYY-MM-DD format"
exit 1
fi

echo "Enter location"
read location

if [[ "$location" =~ $location_regex ]]
then
echo "Please enter a valid location"
exit 1
fi

echo "Enter diagnosis"
read diagnosis

echo "Enter surgery status"
read surgery_status

echo "Enter surgery date(YYYY-MM-DD)"
read surgery_date

echo "Enter room id for the patient"
read room_id

./room_id_validation $room_id
if [[ $? == 0 ]] 
then
    ./menu
    exit
fi

patient_name=$(ps -ef | grep "port 10 -" | grep -v "grep port 10 -"| awk -F, -v patient_id="$patient_id" '{if ( $1 == patient_id ) {
    patient_name = $2;
    print patient_name;
    }}' patients.csv )

doctor_name=`ps -ef | grep "port 10 -" | grep -v "grep port 10 -"| awk -F, -v d_id="$d_id" '{if ( $1 == d_id ) {
    name = $2;
    print name;
    }}' doctors.csv `


#ADD RECORDS
filename=admitted_patients.csv
#Check if file ends with new line and add records appropriately
if [ ! -s "$filename" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,"$patient_name","$admitted_date","$location","$doctor_name","$diagnosis",$patient_id,$d_id,$surgery_status,$surgery_date,$room_id >> $filename
elif [ -z "$(tail -c 1 <"$filename")" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,"$patient_name","$admitted_date","$location","$doctor_name","$diagnosis",$patient_id,$d_id,$surgery_status,$surgery_date,$room_id >> $filename
else
  printf "\n%s%s%s%s%s\n" $RANDOM,"$patient_name","$admitted_date","$location","$doctor_name","$diagnosis",$patient_id,$d_id,$surgery_status,$surgery_date,$room_id >> $filename
fi

echo -e "\n##### Admitted Patient's details added! #####\n"
